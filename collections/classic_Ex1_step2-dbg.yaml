---
- name: Configuring Example Tenant
  hosts: DMZ 
  collections:
   - cisco.aci
  connection: local
  gather_facts: no

  tasks:
  - name: Create a New Tenant
    aci_tenant:
      host: "{{ inventory_hostname }}"
      username: "{{ username }}"
      private_key: "{{ private_key }}"
      tenant: Partner-Training
      description: "Tenant configured by Ansible"
      validate_certs: no
      state: present
      output_path: 'config.json' 

  - name: create a new VRF
    aci_vrf:        
      hostname: "{{ inventory_hostname }}"        
      username: "{{ username }}"        
      private_key: "{{ private_key }}"        
      validate_certs: False        
      state: present        
      vrf: Demo       
      tenant: Partner-Training       
      descr: "Ansible created VRF"        
      policy_control_preference: enforced        
      policy_control_direction: ingress
      output_path: 'config.json' 

  - name: create bridge domain 
    aci_bd:        
      hostname: "{{ inventory_hostname }}"
      username: "{{ username }}"        
      private_key: "{{ private_key }}"       
      validate_certs: False        
      state: present
      tenant: Partner-Training
      bd: MyBD        
      vrf: Demo
      enable_routing: yes        
      arp_flooding: no        
      l2_unknown_unicast: flood
      output_path: 'config.json' 

  - name: Add a new AP
    aci_ap:
      hostname: "{{ inventory_hostname }}"
      username: "{{ username }}"        
      private_key: "{{ private_key }}" 
      validate_certs: False  
      tenant: Partner-Training
      ap: MyApp
      description: default ap
      state: present
      output_path: 'config.json' 

  - name: create EPG for Web-Tier      
    aci_epg:        
      hostname: "{{ inventory_hostname }}"        
      username: "{{ username }}"        
      private_key: "{{ private_key }}"        
      validate_certs: False        
      state: present
      tenant: Partner-Training
      epg: Web
      ap: MyApp        
      bd: MyBD
      output_path: 'config.json' 

  - name: contract for Web-Tier to internet      
    aci_epg_to_contract:        
      hostname: "{{ inventory_hostname }}"        
      username: "{{ username }}"        
      private_key: "{{ private_key }}"        
      validate_certs: False        
      state: present
      tenant: Partner-Training
      epg: Web
      ap: MyApp                
      contract_type: consumer        
      contract: Allow-Internet
      output_path: 'config.json' 

  - name: contract for Web-Tier to internet 
    aci_contract:
      hostname: "{{ inventory_hostname }}"
      username: "{{ username }}"
      private_key: "{{ private_key }}"
      validate_certs: False  
      contract: Allow-Internet
      description: "Allow-Internet-Contract"
      tenant: Partner-Training
      scope: tenant
      output_path: 'config.json' 

  - name: contract for Web-Tier to internet 
    aci_contract_subject:
      hostname: "{{ inventory_hostname }}"
      username: "{{ username }}"
      private_key: "{{ private_key }}"
      validate_certs: False  
      contract: Allow-Internet
      subject: default
      description: "Allow-Internet-Contract"
      tenant: Partner-Training
      output_path: 'config.json' 
 